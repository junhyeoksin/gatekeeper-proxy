plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.palantir.docker' version '0.35.0'
    id 'maven-publish'
}

group = 'com.gatekeeper'
version = '0.1.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.keycloak.bom:keycloak-adapter-bom:23.0.0"
    }
}

dependencies {
    // WebFlux & Security
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'

    // Spring Cloud Gateway & Circuit Breaker
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'

    // Keycloak Admin Client (no spring adapter!)
    implementation 'org.keycloak:keycloak-admin-client:23.0.0'

    // Redis (Reactive)
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.session:spring-session-data-redis'

    // JWT 유틸용
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'

    // Monitoring
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

    // API 문서 (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

bootJar {
    archiveBaseName = project.name
    archiveVersion = project.version
    archiveClassifier = ''
}

docker {
    name "gatekeeper/${project.name}:${project.version}"
    files bootJar.outputs.files
    buildArgs(['JAR_FILE': "${bootJar.archiveFileName.get()}"])
}

test {
    useJUnitPlatform()
}
