server:
  port: 8081

spring:
  main:
    web-application-type: reactive
  application:
    name: gatekeeper-proxy

  data:
    redis:
      host: localhost
      port: 6379
      ssl:
        enabled: false
      timeout: 10000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  cache:
    type: redis

  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: testuser
            client-secret: kVPlrarTQz25mMEaU6A4rPL54b4C8hV7
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            issuer-uri: "http://localhost:8080/realms/myrealm"
            user-name-attribute: preferred_username

keycloak:
  auth-server-url: http://localhost:8080/auth
  realm: myrealm
  resource: testuser
  credentials:
    secret: kVPlrarTQz25mMEaU6A4rPL54b4C8hV7


logging:
  level:
    org.springframework.security: INFO
    com.gatekeeper.proxy: DEBUG
